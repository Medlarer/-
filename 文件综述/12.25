12.25
问题描述，
上节课用popup函数解决了在不刷新页面的情况下，
添加页面添加新的外键字段或多对多字段。但同时也存在一些bug
1.新添加的字段不能立即被用户添加，用户如果点击新添加的字段，页面会报错
2.当一张表的某个字段同时被多张表关联时，新添加的字段不应该在其他关联字段的下拉框中显示，
只显示在新添加的字段的下拉框中，
比如 ：
class Department(models.Model):
    """
    部门表
    市场部     1000
    销售      1001
    """
    title = models.CharField(verbose_name='部门名称', max_length=16)
    code = models.IntegerField(verbose_name='部门编号',unique=True,null=False)

    def __str__(self):
        return self.title
class UserInfo(models.Model):
    """
    员工表
    """
    # auth = models.OneToOneField(verbose_name='用户权限', to=rbac_model.User)
    name = models.CharField(verbose_name='员工姓名', max_length=16)
    username = models.CharField(verbose_name='用户名', max_length=32)
    password = models.CharField(verbose_name='密码', max_length=64)
    email = models.EmailField(verbose_name='邮箱', max_length=64)

    depart = models.ForeignKey(verbose_name='部门', to="Department",to_field="code")

上表中有两个部门，分别为技术部和市场部，
在技术部用popup函数添加一名员工张三，那么popup函数添加的张三这名员工就只能显示在技术部的下拉框中，
不能显示在市场部的下拉框中，（如果不刷新，那么张三也会显示在市场部中，且刚添加时，不能被选中。）

解决思路：
通过查找我们发现，新生成的select标签的value值不对
正确的value="code",而新生成的value="id_depart"，所以只要修改这个值就可以了

1.页面上的所有input标签都是每一张表通过ModelForm生成的，那么我们在生成iuput标签时改一下这个值就可以了。
2.首先，在GET请求进来添加页面时，再传一个参数（生成这张表的类）
3.在自定义标签中通过这个参数取到model_name和related_name
model_name=参数.model_class._meta.model_name
related_name=参数.model_class.get_field("（字段名）/bfield.name").rel.related_name
(注意：多对多字段没有.rel方法)
4.点击popup按钮在添加页面POST得到这个新生成的对象popup函数时有一个GET请求，得到通过
类对象的得到的model_class和related_name
5.循环新生成的对象._meta.related_objects:得到新的model_class和related_name与通过GET得到的model_class
和related_name比较
6.首先判断是不是多对一，再判断limit_choice_to,新的id通过反射得到。
